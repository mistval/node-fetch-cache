{
  "name": "node-fetch-cache",
  "version": "3.1.4",
  "description": "node-fetch with caching.",
  "main": "src/index.js",
  "type": "module",
  "exports": {
    "import": "./dist/index.js",
    "require": "./dist/wrapper.cjs"
  },
  "scripts": {
    "tsc": "tsc",
    "buildcjs": "rollup ./dist/index.js --file ./dist/index.cjs --format cjs && cp ./commonjs/wrapper.cjs ./dist/wrapper.cjs",
    "test": "NODE_OPTIONS=\"--loader ts-node/esm\" mocha --require ts-node/register --spec test/tests.ts --extensions ts --timeout 10000 --exit && mocha --timeout 10000 --exit test/tests.cjs",
    "coverage": "c8 --reporter=lcov --reporter=text --reporter=html --exclude=dist --exclude=test npm test",
    "lint": "xo .",
    "lintfix": "xo . --fix",
    "prepublishOnly": "npm run tsc && npm run buildcjs && npm test",
    "prepare": "husky install"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mistval/node-fetch-cache.git"
  },
  "keywords": [
    "node",
    "fetch",
    "node-fetch",
    "cache",
    "cached"
  ],
  "author": "mistval",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mistval/node-fetch-cache/issues"
  },
  "homepage": "https://github.com/mistval/node-fetch-cache#readme",
  "devDependencies": {
    "@types/cacache": "^17.0.2",
    "@types/mocha": "^10.0.6",
    "@types/node-fetch": "^2.6.9",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "c8": "^8.0.1",
    "dotenv": "^16.3.1",
    "husky": "^8.0.3",
    "mocha": "^10.2.0",
    "rimraf": "^5.0.5",
    "rollup": "^4.9.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.3.3",
    "xo": "^0.56.0"
  },
  "dependencies": {
    "cacache": "^18.0.1",
    "form-data": "^4.0.0",
    "locko": "^1.1.0",
    "node-fetch": "2.7.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run prepublishOnly"
    }
  },
  "engines": {
    "node": ">=14.14.0"
  },
  "xo": {
    "space": true,
    "ignores": [
      "test/tests.cjs"
    ],
    "rules": {
      "unicorn/filename-case": [
        "error",
        {
          "case": "snakeCase"
        }
      ],
      "@typescript-eslint/naming-convention": [
        "error",
        {
          "selector": "typeAlias",
          "format": [
            "PascalCase"
          ]
        }
      ],
      "@typescript-eslint/object-curly-spacing": [
        "error",
        "always"
      ],
      "unicorn/prefer-node-protocol": "off",
      "max-params": [
        "error",
        7
      ]
    }
  }
}
